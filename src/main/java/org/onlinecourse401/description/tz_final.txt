- регистрация нового пользователя ( student / admin )
1)  -Admin
      mail
      password

 Admin создает курс, добавляет материалы(String ссылки)

1.1) Student
      id,          - присваевается внутри системы при регистрации по counter++
      firstName,
      lastName,
      emailAddress,
      password,
      Course - который он себе выбрал
      List<TestResult> testResult   - ссылка на объект


2) Course - содержит один окончательный тест    //(кол-во курсов всего 3)

   id,
   courseName,
   description,
   teacherName,
   duration,
   Test test(вопросы и ответы)

 3) Test - содержит коллекцию вопросов
     -title(название теста)
     -Questions (List)                        //(в каждом тесте будет 3 вопроса)



5. Question               вопрос теста                                             //????  Enum / Map - для вариантов ответов
   id,
   String text,           содержимое вопроса
   List<String> answerOption   - предлогаемые варианты ответов
   -int correctAnswer  - ссылка на индекс елемента из 35 строки




6. TestResult           Содержит информацию о результатах тестирования студентов в рамках конкретного курса
      id,

      numberOfRightAnswer,  количество правильных ответов
      score,                 оценка
      Связан с :            ??? конкретным тестом, студентом и курсом
      Course courseId
      List<Integer> studentsAnswer - список ответов студентов


- заходит студент и запрашивает findAllCourses(видно и для студента и для admin )
    - вибирает себе определенный курс из списка курсов  и выбранный курс добавляется ему
    - студент обязан просмотреть контент по курсу, и после ему вылетает тест(ОБЯЗАТЕЛЬНО!)
    -



 контент, вопросы


 backEnd
        - Entity
         + Student
         + Course
         + Test
         + Question
         + TestResult
         + Admin    ?
         + Analitic ?

        - Repository
        + RepositoryInterface (add, delete, update(set), find by..., findAll(?))  //<T> - ? / для каждой ентити
         + StudentsRepository для хранения студентов
         + CourseRepository   для хранения курсов
         + TestRepository для хранения тестов
         + QuestionRepository
         + TestResultRepository

       - dto
         + Student
         + Kurs
         + Test
         + учебный материал

       - servise
         +  для работы с Student (create, validation, add, remove, find by...)
         +  для работы с Kurs  (create, validation, add, remove, find by...)
         + и для тестов наверняка
         + принт любого списка

 frontEnd
       - UserMenu for Student
       - UserMenu for Admin





