package org.onlinecourse401.project.backEnd.service.allServices;

public class TestResultService {
/*
Step1: metod prohozhdenija testa / dachi otvetov na voprosy:
    Map<Integer, Integer> createStudentAnswers(List<Student> students,String email) {
    for (Student student : List<Student> students) {
    if (student.getEmail().equals(email)) {

    String test1Title = student.getCoursesByStudent().getCourse().getTests().getTestControl().getTitle
    System.out.println("Evaluate test: "+ test1Title);

    String question1 = student.getCoursesByStudent().getCourse().getTests().getTestControl().getTitle.getQuestions.getIndex(0)
    System.out.println("Question nr.1: " + question1);
    List<String> optionsQ1 = getListOptions
    int studentAnswerQ1 = userInput.inputInteger("Please choose one answer option: " + optionsQ1)

    String question2 = student.getCoursesByStudent().getCourse().getTests().getTestControl().getTitle.getQuestions.getIndex(1)
    System.out.println("Question nr.2: " + question2);
    List<String> optionsQ2 = getListOptions
    int studentAnswerQ2 = userInput.inputInteger("Please choose one answer option: " + optionsQ2)

    String question3 = student.getCoursesByStudent().getCourse().getTests().getTestControl().getTitle.getQuestions.getIndex(2)
    System.out.println("Question nr.3: " + question3);
    List<String> optionsQ3 = getListOptions
    int studentAnswerQ3 = userInput.inputInteger("Please choose one answer option: " + optionsQ3)

    Map<Integer, Integer> studentAnswers = new HashMap<>();
    studentAnswers.put(1,studentAnswerQ1);
    studentAnswers.put(2,studentAnswerQ2);
    studentAnswers.put(3,studentAnswerQ3);

Step2: metod ocenki otvetov
    public Integer calculateCurrentGrade(List<Course> coursesByStudent, testId, Map<Integer, Integer> studentAnswers) {
    Integer currentGrade = 0;
    for Question question : List<Question> {
    if ( question.getCorrectAnswer().equals(studentAnswerQ1) {
    currentGrade++;
    }else {
    currentGrade;
    }
    return currentGrade;
    }

Step3: sozdaem eksempljar klassa TestResult
    public TestResult createTestResult(Integer courseId, Integer currentGrade, Map<Integer, Integer> studentAnswers) {
    TestResult testResult = new TestResult(Integer courseId, Integer currentGrade,Map<Integer, Integer> studentAnswers)
    return testResult;
    }
Step4: sozdaem collecciju iz TestResult ili Map<Course, List<TestResult>> ?????????
    List<TestResult>> courseTestResults
    metod:
    public Map<Course, List<TestResult>> createTestResults(List<Student> students){
    for (Student student : List<Student> students) {
    Course key = student.getCoursesByStudent().getCourse()

    }



    }

 */

}
